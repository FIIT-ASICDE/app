model Organization {
  id                   String @db.Uuid                 @id @default(uuid())
  name                 String
  image				   String?
  bio				   String?
  users                OrganizationUser[]
  userOrganizationRepo RepoUserOrganization[]
  OrganizationUserInvitation OrganizationUserInvitation[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([name(ops: raw("gin_trgm_ops"))], map: "organization_name_trgm_idx", type: Gin)
}

model OrganizationUser {
  userId         String           @db.Uuid
  user           User             @relation(fields: [userId], references: [id])
  organizationId String           @db.Uuid
  organization   Organization     @relation(fields: [organizationId], references: [id])
  role           OrganizationRole

  @@unique([userId, organizationId]) // Ensures a user can have one role per organization
}

model OrganizationUserInvitation {
  userId         String           @db.Uuid
  user           User             @relation(fields: [userId], references: [id])
  organizationId String           @db.Uuid
  organization   Organization     @relation(fields: [organizationId], references: [id])
  isPending      Boolean          @default(true)
  role           OrganizationRole @default(MEMBER)

  @@unique([userId, organizationId])
}

enum OrganizationRole {
  MEMBER
  ADMIN
}
