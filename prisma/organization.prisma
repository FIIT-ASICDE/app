model Organization {
  id                   String @db.Uuid                 @id @default(uuid())
  name                 String
  image				   String?
  bio				   String?
  users                OrganizationUser[]
  userOrganizationRepo RepoUserOrganization[]
  OrganizationUserInvitation OrganizationUserInvitation[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([name(ops: raw("gin_trgm_ops"))], map: "organization_name_trgm_idx", type: Gin)
}

model OrganizationUser {
  userMetadataId String           @db.Uuid
  userMetadata   UserMetadata     @relation(fields: [userMetadataId], references: [id])
  organizationId String           @db.Uuid
  organization   Organization     @relation(fields: [organizationId], references: [id])
  role           OrganizationRole

 // user can have one role per organization
  @@id([userMetadataId, organizationId])
  @@index([userMetadataId])
  @@index([organizationId])
}

model OrganizationUserInvitation {
  userMetadataId        String           @db.Uuid
  userMetadata          UserMetadata     @relation(fields: [userMetadataId], references: [id])
  organizationId 		String           @db.Uuid
  organization   		Organization     @relation(fields: [organizationId], references: [id])
  isPending      		Boolean          @default(true)
  role           		OrganizationRole @default(MEMBER)

 // user can have one invitation per organization
  @@id([userMetadataId, organizationId])
}

enum OrganizationRole {
  MEMBER
  ADMIN
}
